% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PEAXAI_fitting.R
\name{PEAXAI_fitting}
\alias{PEAXAI_fitting}
\title{Training Classification Models to Estimate Efficiency}
\usage{
PEAXAI_fitting(
  data,
  x,
  y,
  RTS,
  trControl,
  methods,
  metric_priority,
  importance_method,
  hold_out,
  imbalance_rate = 0,
  scenarios = 0.75
)
}
\arguments{
\item{data}{A \code{data.frame} or \code{matrix} containing the variables in the model.}

\item{x}{Column indexes of input variables in \code{data}.}

\item{y}{Column indexes of output variables in \code{data}.}

\item{RTS}{Text string or number defining the underlying DEA technology /
returns-to-scale assumption (default: \code{"vrs"}). Accepted values:
\describe{
\item{\code{0} / \code{"fdh"}}{Free disposability hull, no convexity assumption.}
\item{\code{1} / \code{"vrs"}}{Variable returns to scale, convexity and free disposability.}
\item{\code{2} / \code{"drs"}}{Decreasing returns to scale, convexity, down-scaling and free disposability.}
\item{\code{3} / \code{"crs"}}{Constant returns to scale, convexity and free disposability.}
\item{\code{4} / \code{"irs"}}{Increasing returns to scale (up-scaling, not down-scaling), convexity and free disposability.}
\item{\code{5} / \code{"add"}}{Additivity (scaling up and down, but only with integers), and free disposability.}
}}

\item{trControl}{Parameters for controlling the training process (from the \code{'caret'} package).}

\item{methods}{A \code{list} of selected machine learning models and their hyperparameters.}

\item{metric_priority}{A \code{string} specifying the summary metric for classification to select the optimal model. Default includes \code{"Balanced_accuracy"} due to (normally) unbalanced data.}

\item{importance_method}{A \code{string} specifying the method to determine the relative importance of variables. Default includes \code{"SHAP"}.}

\item{hold_out}{A \code{number} value (5-20) for validation data percentage during training (default: 0.2).}

\item{imbalance_rate}{Indicate the number of efficient and not efficient units.}

\item{scenarios}{Level of efficiency to peer.}

\item{test_hold_out}{A \code{number} value (5-20) for validation data percentage during training (default: 0.2).}

\item{convexity}{A \code{logical} value indicating if a convex technology is assumed.}

\item{returns}{Type of returns to scale.}
}
\value{
A \code{"cafee"} object.
}
\description{
Trains one or multiple classification algorithms to identify Pareto-efficient
decision-making units (DMUs). It jointly searches model hyperparameters and the
class-balancing level (e.g., synthetic samples via SMOTE) using k-fold cross-
validation or a train/validation/test split, selecting the configuration that
maximizes the specified metric(s). Returns, for each technique, the best fitted
model together with training summaries, performance metrics, and the selected
balancing level.
}
